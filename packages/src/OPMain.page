Menu="Main:1895"
---
<?php
/**
 * Disable the other methods to decrypt the disk as long as 1Password has been chosen
 *
 *
 * Inject the 1Password option in the main page to allow the user to choose how to
 * decrypt their disks. We don't want to force the user to use the 1Password method
 * therefor we simply just append it as an extra option so they still can use the
 * built-in support for keyfile and passphrase.
 */

// Only run this page if the array is stopped.
// var is a global variable defined in parent pages
if (isset($var) && ($var["fsState"] ?? "") !== "Stopped") return;

$pluginRoot = $pluginRoot ?? "{$docroot}/{$page['root']}";
define("OP_PLUGIN_ROOT", $pluginRoot);
require_once ("{$pluginRoot}/include/Plugin.php");

$plugin = new Plugin();
$diskMountEnabled = $plugin->getConfig()->get('op_disk_mount') === "enabled";
// Don't do anything if the user hasn't enabled the disk mount setting.
if (!$diskMountEnabled) return;


$accessToken = $plugin->getConfig()->get('op_cli_service_account_token');
$vaultItem = $plugin->getConfig()->get('op_vault_item');
$opCmd = sprintf('OP_SERVICE_ACCOUNT_TOKEN=%s op', escapeshellarg($accessToken));

$isInstalled = exec("which op");
$hasAccessToken = strlen($accessToken) > 0;
$hasVaultItem = strlen($vaultItem) > 0;
$canAccessOp = $isInstalled && $hasAccessToken && $hasVaultItem && exec(escapeshellcmd($opCmd." whoami"));

$opStatusClass = "op-status-error";
if ($isInstalled) {
    if ($hasAccessToken) {
        if ($hasVaultItem) {
            if ($canAccessOp) {
                $opStatusClass = "op-status-ok";
                $opStatusMsg = 'Ready to retrieve token from 1Password';
            } else {
                $opStatusMsg = "Cannot access 1Password";
            }
        } else {
            $opStatusMsg = "No vault item is configured";
        }
    } else {
        $opStatusMsg = "No service account is configured";
    }
} else {
     $opStatusMsg = "1Password is not installed";
}
?>

<?= Html::getStyle($plugin, "main.css").Html::getJavaScript($plugin, "main.js"); ?>;

<script type="text/javascript">
    window.addEventListener('load', (event) => {
        modifyMainPage(<?= "'{$opStatusClass}','{$opStatusMsg}'";?>);
    });
</script>;
